<?php

namespace DoctrineORMModule\Proxy\__CG__\TenilUser\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Perfil extends \TenilUser\Entity\Perfil implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'user', 'telefones', 'enderecos', 'nome', 'sobrenome', 'apelido', 'tratamento', 'isGravatar', 'foto');
        }

        return array('__isInitialized__', 'id', 'user', 'telefones', 'enderecos', 'nome', 'sobrenome', 'apelido', 'tratamento', 'isGravatar', 'foto');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Perfil $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNome()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNome', array());

        return parent::getNome();
    }

    /**
     * {@inheritDoc}
     */
    public function getSobrenome()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSobrenome', array());

        return parent::getSobrenome();
    }

    /**
     * {@inheritDoc}
     */
    public function getApelido()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApelido', array());

        return parent::getApelido();
    }

    /**
     * {@inheritDoc}
     */
    public function getTratamento()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTratamento', array());

        return parent::getTratamento();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsGravatar()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsGravatar', array());

        return parent::getIsGravatar();
    }

    /**
     * {@inheritDoc}
     */
    public function getFoto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFoto', array());

        return parent::getFoto();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setNome($nome)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNome', array($nome));

        return parent::setNome($nome);
    }

    /**
     * {@inheritDoc}
     */
    public function setSobrenome($sobrenome)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSobrenome', array($sobrenome));

        return parent::setSobrenome($sobrenome);
    }

    /**
     * {@inheritDoc}
     */
    public function setApelido($apelido)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApelido', array($apelido));

        return parent::setApelido($apelido);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsGravatar($isGravatar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsGravatar', array($isGravatar));

        return parent::setIsGravatar($isGravatar);
    }

    /**
     * {@inheritDoc}
     */
    public function setFoto($foto)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFoto', array($foto));

        return parent::setFoto($foto);
    }

    /**
     * {@inheritDoc}
     */
    public function addTelefones(\Doctrine\Common\Collections\Collection $telefones)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTelefones', array($telefones));

        return parent::addTelefones($telefones);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTelefones(\Doctrine\Common\Collections\Collection $telefones)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTelefones', array($telefones));

        return parent::removeTelefones($telefones);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelefones()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelefones', array());

        return parent::getTelefones();
    }

    /**
     * {@inheritDoc}
     */
    public function addEnderecos(\Doctrine\Common\Collections\Collection $enderecos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEnderecos', array($enderecos));

        return parent::addEnderecos($enderecos);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEnderecos(\Doctrine\Common\Collections\Collection $enderecos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEnderecos', array($enderecos));

        return parent::removeEnderecos($enderecos);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnderecos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnderecos', array());

        return parent::getEnderecos();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\TenilUser\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setTratamento(\TenilUser\Entity\PerfilTratamento $tratamento = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTratamento', array($tratamento));

        return parent::setTratamento($tratamento);
    }

}
